// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Couple {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  fullname  String
  email     String   @unique
  telephone String   @default("000-000-0000")
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt //automatically update updatedAt

  Vendor  Vendor[]
  Booking Booking[]
  Rating  Rating[]
}

model Vendor {
  id         Int       @id @default(autoincrement())
  username   String    @unique
  fullname   String
  email      String    @unique
  telephone  String //@default("000-000-0000")
  password   String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt //automatically update updatedAt
  couple     Couple?   @relation(fields: [coupleId], references: [id])
  coupleId   Int?
  category   Category  @relation(fields: [categoryId], references: [id])
  Booking    Booking[]
  Rating     Rating[]
  categoryId Int
  //Profile    Profile[]
}

model Category {
  id        Int      @id @default(autoincrement())
  title     String   @unique
  picture   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Rating Rating[]
  Vendor Vendor[]
}

model Booking {
  id              Int      @id @default(autoincrement())
  username        String //@unique
  slug            String   @unique
  fullname        String
  email           String //@unique
  telephone       String   @default("000-000-0000")
  eventDate       DateTime
  //checkoutDate    DateTime?
  eventType       String
  country         String
  city            String
  estimatedBudget String
  additionalInfo  String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  couple          Couple   @relation(fields: [coupleId], references: [id])
  coupleId        Int
  vendor          Vendor   @relation(fields: [vendorId], references: [id])
  vendorId        Int
}

// model Profile {
//   id          Int    @id @default(autoincrement())
//   title       String @unique
//   description String
//   package     String
//   picture     String
//   vendor      Vendor @relation(fields: [vendorId], references: [id])
//   vendorId    Int
// }

model Rating {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  couple     Couple   @relation(fields: [coupleId], references: [id])
  coupleId   Int
  vendor     Vendor   @relation(fields: [vendorId], references: [id])
  vendorId   Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
}
